# Transform the light curve (LC) files I generate during the creation of
# the PLASTICC files (like "plot_1_LSST_42653_Rosanne_16_table.dat") so that
# Rosanne can implement a code to identify microlensing events using these
# LCs files
#
# The transformations are:
#
# 1. Remove the header lines (the ones that say I made that file, date
# script name, etc) of the LC file, so that I can more easily read and
# manipulate the columns.
#
# 2. Create a new datafile using the first (time) and second (u-band) columns
# of the original file.
#
# 3. Randomly select N lines and create a new file with them.
#
# 4. Order ascending the random file using the first column (time) as the
# reference to sort the lines.
#
# 5. Add a header to label the columns.
#
# 6. Remove all the intermediate files.

#--------------------------------------------------
# Script created by: Arturo Avelino
# On date: 2019-01-01 (yyyy-mm-dd)
# Last update: 2019-01-02 (yyyy-mm-dd)
# Version 0.1.1

#-----------------------------------------------------------------------------80

#   USE
#
# 1. In this script, change the path to the directory where the files to be
# transformed are located.
# 2. In a terminal go where this script is located and then type:
#
#     source thisScript.sh

###############################################################################80

cd /Users/arturo/Dropbox/Research/Articulos/14_Plasticc/MockData/Production_Binary/ForRosanne

# Define a fixed seed for the random values to be generated by "gshuf"
get_seeded_random()
{
  seed="$1"
  openssl enc -aes-256-ctr -pass pass:"$seed" -nosalt \
    </dev/zero 2>/dev/null
}


# Notes:
# - The indentation in the "for" loop below is not necessary. I put it
# to improve clarity of the script.
# - Do not create any intermediate file with name ending "...table.dat"
# because it can cause unexpected results given that the loop read those files
# to create the loop.

for file in *table.dat
    do
    #----------------------------
    # 1. Remove the header lines (the ones that say I made that file, date
    # script name, etc) of the LC file, so that I can more easily read and
    # manipulate the columns.

    # echo tail -n +8 "$file" '>' "${file:0:12}_NoHead.dat"
    ## Ok:
    tail -n +8 "$file" > "${file:0:12}_NoHead_tmp.dat"

    #----------------------------
    # 2. Create a new datafile using the first (time) and second (u-band)
    # columns of the original file.

    # echo awk "'"{ print '$'1, '$'2 }"'" "${file:0:12}_NoHead.dat" '>' "${file:0:12}_uband.dat"
    ## Ok:
    # awk '{ print $1, $2 }' "${file:0:12}_NoHead.dat" > "${file:0:12}_uband.dat"
    awk {'printf ("%10.3f %8.3f\n", $1, $2)'} "${file:0:12}_NoHead_tmp.dat" > "${file:0:12}_uband_tmp.dat"

    #----------------------------
    # 3. Randomly select N (e.g., 50) lines and create a new file with them. Select the
    # random seed (e.g., 42).

    # echo gshuf -n 40 "${file:0:12}_uband.dat" '>' "${file:0:12}_uband_random.dat"
    ## Ok:
    gshuf --random-source=<(get_seeded_random 42) -n 50 "${file:0:12}_uband_tmp.dat" > "${file:0:12}_uband_random_tmp.dat"

    #----------------------------
    # 4. Order ascending the random file using the first column (time) as the
    # reference to sort the lines.

    ## Ok:
    sort -n "${file:0:12}_uband_random_tmp.dat" > "${file:0:12}_uband_sort_tmp.dat"

    #----------------------------
    # 5. Add a header to label the columns
    ## Ok:
    sed '1s/^/# time  magnitude\
/' "${file:0:12}_uband_sort_tmp.dat" > "${file:5:12}_lc.dat"

done

# 6. Remove all the intermediate files.
rm *_tmp.dat


###############################################################################80

# Return to the directory where this script is located:
cd /Users/arturo/Dropbox/Research/Articulos/14_Plasticc/Codes/github/Lensing/
